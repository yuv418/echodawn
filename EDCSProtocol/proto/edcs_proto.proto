syntax = "proto3";
package edcs_protocol;

enum EdcsMessageType {
    SETUP_EDCS = 0;
    START_STREAM = 1;
    CLOSE_STREAM = 2;
    UPDATE_STREAM = 3;
    SETUP_STREAM = 4;
}

enum EdcsStatus {
    OK = 0;
    GENERIC_ERR = 1;
    EDSS_ERR = 2;
    UNINITIALISED_EDSS = 3;
    INVALID_REQUEST = 4;
    STREAM_ALREADY_STARTED = 5;
}

message EdcsMessage {
    EdcsMessageType message_type = 1;
    oneof payload {
        EdcsStreamParams setup_edcs_params = 2;
        EdcsStreamParams update_stream_params = 3;
        EdcsCALParams setup_stream_params = 4;
    }
}

message EdcsStreamParams {
    uint32 framerate = 1;
    uint32 bitrate = 2;
}
// While these two are the same, we don't know if it'll always be that way
message EdcsCALParams { map<string, string> cal_option_dict = 1; }
message EdcsSetupEdcsData { map<string, string> cal_option_dict = 1; }
message EdcsSetupStreamData {
    EdcsStreamParams out_stream_params = 1;
    string sdp = 2;
}

message EdcsResponse {
    EdcsStatus status = 1;
    oneof payload {
        EdcsSetupEdcsData setup_edcs_data = 2;
        string generic_err_data = 3;
        uint32 edss_err_data = 4;
        string invalid_request_data = 5;
        EdcsSetupStreamData setup_stream_data = 6;
    }
}
